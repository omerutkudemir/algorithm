#include <stdio.h>
#include <stdlib.h>
#include <time.h>
void arena_olustur(char arena[10][10],int n)
{
	
int i,j;	
	
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			arena[i][j]='-';
			printf("%c  ",arena[i][j]);
		}
		printf("\n");
	}
	
	
	
}
void mayinlari_yerlestir(char arena[10][10],int n)
{
	int A;
	int zorluk;
	printf("1 den 4 e kadar zorluk secini:\n\n");
	printf("1=toplam karelerin 5 de biri mayin \n");
    printf("2=toplam karelerin 4 de biri mayin \n");
	printf("3=toplam karelerin 3 de biri mayin \n");
    printf("4=toplam karelerin 2 de biri mayin \n");
	scanf("%d",&zorluk);
	
	switch(zorluk)
	{
		case 1:A=(n*n)/5;break;
		case 2:A=(n*n)/4;break;
		case 3:A=(n*n)/3;break;
		case 4:A=(n*n)/2;break;
	}
	int i,j;
	
	srand(time(0));
	srand(time(0));
	for(i=0;i<A;i++)
	{
		arena[rand()%(n)][rand()%n]='*';
	}
	
	
}
void bolge_acma(char arena[10][10],int n)
{
	int i,j,x,y;
	char kopya_arena[10][10];
	int a,b;
	char kayit[100][n][n];
	int m=0,k=0,l=0,h=0;
		
		printf("acacginiz bolgenin koordinat bilgilerini giriniz: ");
	scanf("%d %d", &a,&b);
	int t=a-1,f=b-1;
	if(arena[a][b]=='*')
	{
		printf("mayina bastiniz kaybettiniz:\n");
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				printf("%c  ",arena[i][j]);
			}
			printf("\n");
		}
		
	}
	else
	{
		int mayinsayisi=0;
		int mayinsayisi2=0;
		int mayinsayisi3=0;
		int m=0,g=0,s=0,d=0,c=0,z=0,l=0,k=0,e=0;
		int q=0;
		int u=0;
		int p,v;
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				kopya_arena[i][j]='-';
			}
		}	
			mayinsayisi = 0;
				
		        for(t=a-1;t<=a+1;t++)
		        {
		        	for(f=b-1;f<=b+1;f++)
		        	{
		        		
		        		if(t>=0&&t<=n &&f>=0 &&f<=n &&arena[t][f]=='*')
		        		{		        			        			
		        			mayinsayisi++;	        			
						}	
										
		        	}
			}
		
			
			if(mayinsayisi==0)
			{
                for(i=a;i<n;i++)
                {
                   for(j=b;j<n;j++)
                    {
                 	    if(arena[i][j]!='*'&&i<n&&j<n&&i>-1&&j>-1)
                 	    {
                 	    	kopya_arena[i][j]='+';
						 }
						 
						   if(arena[i][j]=='*')
                 	    {
                 	    	break;
						 }
				    }
				     
				  
				}
				
				for(x=a;x<n;x++)
				{
					for(y=b;y>-1;y--)
					{
						if(arena[x][y]!='*'&&x<n&&y<n&&x>-1&&y>-1)
						{
							kopya_arena[x][y]='+';
						}
						
							if(arena[x][y]=='*')
						{
							break;
						}
					}
				
				}
				for(q=a;q>-1;q--)
				{
					for(e=b;e<n;e++)
					{
						if(arena[q][e]!='*'&&q<n&&e<n&&q>-1&&e>-1)
						{
							kopya_arena[q][e]='+';
						}
						
						
						
						if(arena[q][e]=='*')
						{
							break;
						}
					}
					
				}
				for(p=a;p>-1;p--)
				{
					for(v=b;v>-1;v--)
					{
						if(arena[p][v]!='*'&&p<n&&v<n&&p>-1&&v>-1)
						{
							kopya_arena[p][v]='+';
						}
						
						
							if(arena[p][v]=='*')
					{
						break;
					}
					}
					
				}
				
				
				
				
				
			
			// her bir + nın en az 3 köşesi + olmalıdır bunu sağlamayan + lar - ye çevrilmelidir
				int sayac=0;
			for(i=0;i<n;i++)
			{
				sayac=0;
				for(j=0;j<n;j++)
				{
					
					if(kopya_arena[i][j]=='+')
					{
						
						for(t=i-1;t<=i+1;t++)
						{
							
							
							for(f=j-1;f<=j+1;f++)
							{
								if(t==i&&f==j)
								{
									continue;
								}
								
									
								
									sayac++;
								
								
								
								
								
							}
						
						}
						if(sayac<3)
						{
							kopya_arena[i][j]='-';
						}
					}
				}
			}
				
		
				
				
				
			}
			    
								
           snprintf(&kopya_arena[a][b], 1, "%d", mayinsayisi);		
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				printf("%c  ",kopya_arena[i][j]);
			}
			printf("\n");
		}
		   
		   
		bolge_acma(arena,n);	
}
}
int main()
{
	char arena[10][10];	
	int n,kontrol;
	int i,j;
	printf("kaca kaclik arena olsun : ");
	scanf("%d",&n);
	arena_olustur(arena,n);
	mayinlari_yerlestir(arena,n);
	bolge_acma(arena,n);
	return 0;
}
